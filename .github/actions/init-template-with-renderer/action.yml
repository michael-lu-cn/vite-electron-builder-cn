name: Setup boilerplate
inputs:
  renderer-template:
    description: Define what vite template should be used to create renderer in case if renderer package doesn't exist
    required: false
    default: ''


runs:
  using: "composite"
  steps:
    - if: ${{ runner.os == 'Linux' }}
      shell: bash
      run: |
        Xvfb :99 -screen 0 1280x960x24 &
        echo "DISPLAY=:99" >> $GITHUB_ENV

    - uses: actions/setup-node@v4
      with:
        node-version: 'latest'

    - uses: pnpm/action-setup@v4
      with:
        version: latest

    - name: Check if renderer directory exists
      id: check-renderer
      run: >-
        if [ -d "packages/renderer" ]; then
          echo "RENDERER_EXIST=true" >> $GITHUB_OUTPUT
        else
          echo "RENDERER_EXIST=false" >> $GITHUB_OUTPUT
        fi
      shell: bash

    - run: |
        pnpm run create-renderer -- -- --template ${{inputs.renderer-template}}
        pnpm --filter @app/integrate-renderer start
      shell: bash
      if: inputs.renderer-template != '' && steps.check-renderer.outputs.RENDERER_EXIST == 'false'

    - name: Cache pnpm store
      uses: actions/cache@v4
      with:
        path: ~/.pnpm-store
        key: pnpm-${{ runner.os }}-${{ inputs.renderer-template }}-${{ hashFiles('**/pnpm-lock.yaml') }}
        restore-keys: |
          pnpm-${{ runner.os }}-${{ inputs.renderer-template }}-

    - name: Cache Electron binaries
      uses: actions/cache@v4
      with:
        path: ~/.cache/electron
        key: electron-${{ runner.os }}-${{ hashFiles('**/pnpm-lock.yaml') }}
        restore-keys: |
          electron-${{ runner.os }}-

    - name: Install Dependencies
      run: >-
        if [ "${{ steps.check-renderer.outputs.RENDERER_EXIST }}" == "true" ] && [ -f "pnpm-lock.yaml" ]; then
          pnpm install --frozen-lockfile
        else
          pnpm install
        fi
      shell: bash
      env:
        ELECTRON_MIRROR: https://npmmirror.com/mirrors/electron/
        ELECTRON_CACHE: ~/.cache/electron

    - name: Verify Electron Installation
      run: |
        echo "Checking Electron installation..."
        if ! pnpm exec electron --version; then
          echo "Electron installation failed, attempting to fix..."
          # Find electron directory
          ELECTRON_DIR=$(find node_modules/.pnpm -name "electron@*" -type d | head -1)
          if [ -n "$ELECTRON_DIR" ]; then
            cd "$ELECTRON_DIR/node_modules/electron"
            echo "Running install.js manually..."
            ELECTRON_MIRROR=https://npmmirror.com/mirrors/electron/ node install.js
          fi
        fi
      shell: bash
